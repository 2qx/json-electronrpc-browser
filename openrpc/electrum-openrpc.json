{
  "openrpc": "1.0.0",
  "info": {
    "version": "1.4.4",
    "title": "Ethereum Cash JSON-RPC",
    "description": "This API lets you interact with Electrum Cash client via Electrum Cash JSON-RPC",
    "license": {
      "name": "The MIT License (MIT)",
      "url": "https://raw.githubusercontent.com/2qx/json-electronrpc-browser/main/LICENSE"
    }
  },
  "servers": [
    {
      "url": "wss://bch.imaginary.cash:50004",
      "name": "wss bch.imaginary.cash"
    }
  ],
  "methods": [
    {
      "name": "blockchain.address.get_balance",
      "summary": "Get an address balance",
      "description": "Return the confirmed and unconfirmed balances of a Bitcoin Cash address.",
      "params": [
        {
          "$ref": "#/components/schemas/Address"
        }
      ],
      "result": {
        "$ref": "#/components/schemas/ConfirmedAndUnconfirmed"
      }
    },
    {
      "name": "blockchain.address.get_mempool",
      "summary": "Get address mempool transactions",
      "description": "Return the unconfirmed transactions of a Bitcoin Cash address.",
      "params": [
        {
          "$ref": "#/components/schemas/Address"
        }
      ],
      "result": {
        "$ref": "#/components/contentDescriptors/MempoolTransactions"
      }
    }
  ],
  "components": {
    "schemas": {
      "Nonce": {
        "title": "nonce",
        "description": "A number only to be used once",
        "$ref": "#/components/schemas/Integer"
      },
      "Null": {
        "title": "null",
        "type": "null",
        "description": "Null"
      },
      "Integer": {
        "title": "integer",
        "type": "integer"
      },
      "Address": {
        "title": "address",
        "required": [
          "address"
        ],
        "summary": "An address in cashaddr format",
        "$ref": "#/components/schemas/CashaddrFormat",
        "description": "The address as a Cash Address string (with or without prefix). Some server implementations may also support Legacy (base58) addresses but are not required to do so by this specification."
      },
      "Addresses": {
        "title": "addresses",
        "type": "array",
        "description": "List of addresses",
        "items": {
          "$ref": "#/components/schemas/Address"
        }
      },
      "CashaddrFormat": {
        "type": "string",
        "pattern": "((bitcoincash|bchreg|bchtest):)?(q|p)[a-z0-9]{41}",
        "example": "bchtest:qpttdv3qg2usm4nm7talhxhl05mlhms3ys43u76rn0"
      },
      "ConfirmedAndUnconfirmed": {
        "name": "Balance",
        "description": "The confirmed and unconfirmed balance in satoshis",
        "type": "object",
        "schema": {
          "properties": {
            "confirmed": {
              "$ref": "#/components/schemas/Integer",
              "description": "Amount included in blocks"
            },
            "unconfirmed": {
              "$ref": "#/components/schemas/Integer",
              "description": "Amount in mempool"
            }
          }
        }
      },
      "MempoolTransaction": {
        "name": "A mempool transaction",
        "type": "object",
        "description": "Details of an unconfirmed transaction in mempool",
        "schema": {
          "properties": {
            "height": {
              "$ref": "#/components/schemas/Integer",
              "description": "Amount included in blocks"
            },
            "tx_hash": {
              "$ref": "#/components/schemas/TransactionHashFormatBE",
              "description": "The transaction hash in hexadecimal."
            },
            "fee": {
              "$ref": "#/components/schemas/Integer",
              "description": "The transaction fee in minimum coin units (satoshis)."
            }
          }
        }
      },
      "MempoolTransactions": {
        "name": "Mempool transactions",
        "description": "A list of mempool transactions",
        "schema": {
          "title": "setOfTransactions",
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/MempoolTransaction"
          }
        }
      }

    },
    "contentDescriptors": {
      "MempoolTransactions": {
        "name": "Mempool transactions",
        "description": "A list of mempool transactions",
        "schema": {
          "title": "setOfTransactions",
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/MempoolTransaction"
          }
        }
      },
      "TransactionHashFormatBE": {
        "name": "A transaction hash",
        "description": "A the double sha256 hash of the transaction, as a Big-Endian hexadecimal ",
        "schema":{
          "pattern": "[0-9A-Fa-f]{64}",
          "example": "0e3e2357e806b6cdb1f70b54c3a3a17b6714ee1f0e68bebb44a74b1efd512098",
          "type": "string"  
        }
      }
    }
  }
}